<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trkj.projects.mybatis.dao.SysRolesDao">

    <resultMap type="com.trkj.projects.mybatis.entity.SysRoles" id="SysRolesMap">
        <result property="rolesId" column="roles_id" jdbcType="INTEGER"/>
        <result property="rolesLv" column="roles_lv" jdbcType="INTEGER"/>
        <result property="rolesName" column="roles_name" jdbcType="VARCHAR"/>
        <result property="roles_beizhu" column="roles_beizhu" jdbcType="VARCHAR"/>
    </resultMap>

<!--  用户角色中间表  -->
    <resultMap id="userandroles" type="com.trkj.projects.mybatis.entity.SysUserRoles">
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="rolesId" column="roles_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--  新增角色  -->
    <insert id="insertroles" keyProperty="rolesId" useGeneratedKeys="true">
        insert into sys_roles(roles_lv,roles_name, roles_beizhu)
        values (#{rolesLv},#{rolesName},#{roles_beizhu})
    </insert>

    <!--  修改角色  -->
     <select id="selectall" resultMap="SysRolesMap">
         select * from sys_roles
     </select>
    <!--查询单个-->
    <select id="queryById" resultMap="SysRolesMap">
        select
          roles_id, roles_lv, roles_name
        from projects.sys_roles
        where roles_id = #{rolesId}
    </select>
    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SysRolesMap">
        select
          roles_id, roles_lv, roles_name, menu_id
        from projects.sys_roles
        limit #{offset}, #{limit}
    </select>
    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="SysRolesMap">
        select
        roles_id, roles_lv, roles_name
        from projects.sys_roles
        <where>
            <if test="rolesId != null">
                and roles_id = #{rolesId}
            </if>
            <if test="rolesLv != null">
                and roles_lv = #{rolesLv}
            </if>
            <if test="rolesName != null and rolesName != ''">
                and roles_name = #{rolesName}
            </if>
            <if test="menuId != null">
                and menu_id = #{menuId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="rolesId" useGeneratedKeys="true">
        insert into projects.sys_roles(roles_lv, roles_name)
        values (#{rolesLv}, #{rolesName})
    </insert>

    <insert id="insertBatch" keyProperty="rolesId" useGeneratedKeys="true">
        insert into projects.sys_roles(roles_lv, roles_name)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.rolesLv}, #{entity.rolesName})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="rolesId" useGeneratedKeys="true">
        insert into projects.sys_roles(roles_lv, roles_name)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.rolesLv}, #{entity.rolesName})
        </foreach>
        on duplicate key update
        roles_lv = values(roles_lv) , roles_name = values(roles_name)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update projects.sys_roles
        <set>
            <if test="rolesLv != null">
                roles_lv = #{rolesLv},
            </if>
            <if test="rolesName != null and rolesName != ''">
                roles_name = #{rolesName},
            </if>
            <if test="roles_beizhu != null">
                roles_beizhu = #{roles_beizhu},
            </if>
        </set>
        where roles_id = #{rolesId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from projects.sys_roles where roles_id = #{rolesId}
    </delete>

<!--  删除角色前先查询该角色下是否存在用户  -->
    <select id="selectuseranroles" resultMap="userandroles">
        SELECT * FROM `sys_user_roles` WHERE roles_id = #{rolesId}
    </select>
<!--  模糊查询角色  -->
    <select id="likeroles" resultMap="SysRolesMap">
        select * from sys_roles where roles_name like CONCAT('%',#{rolestext},'%') or roles_beizhu like CONCAT('%',#{rolestext},'%')
    </select>
    <!-- 根据userid查询对应的所有角色 -->
    <select id="findbyuseridroles" resultMap="SysRolesMap">
        SELECT sr.* FROM sys_user su
			 LEFT JOIN `sys_user_roles` sur ON sur.user_id = su.user_id
			 LEFT JOIN  `sys_roles` sr ON sr.roles_id = sur.roles_id
			 WHERE su.user_id = #{userid}
    </select>
</mapper>

